RTL CODE :
`timescale 1ns / 1ps
//Date:16/09/2024   
//Name:Charan Kopparla

module ripple_carry_adder(
input [3:0]a,
input [3:0]b,
input cin,
output [3:0]sum,
output cout);
wire w1,w2,w3;
assign {w1,sum[0]} = a[0]+b[0]+cin;
assign {w2,sum[1]} = a[1]+b[1]+w1;
assign {w3,sum[2]} = a[2]+b[2]+w2;
assign {cout,sum[3]} = a[3]+b[3]+w3;
endmodule 

TEST BENCH :
`timescale 1ns / 1ps
//Date:16/09/2024
//Name:Charan Kopparla 
module ripple_carry_adder_tb();
reg [3:0]a;
reg [3:0]b;
reg cin;
wire [3:0]sum;
wire cout;
ripple_carry_adder dut(.a(a),.b(b),.cin(cin),.sum(sum),.cout(cout));
initial begin 
a=4'b0000;b=4'b0000;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,cout=%b",a,b,cin,sum,cout);
a=4'b0101;b=4'b0011;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,cout=%b",a,b,cin,sum,cout);
a=4'b1111;b=4'b1111;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,cout=%b",a,b,cin,sum,cout);
a=4'b0000;b=4'b0000;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,cout=%b",a,b,cin,sum,cout);
a=4'b1010;b=4'b0101;cin=1;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,cout=%b",a,b,cin,sum,cout);
a=4'b1001;b=4'b0110;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,cout=%b",a,b,cin,sum,cout);
$finish();
end 
endmodule










