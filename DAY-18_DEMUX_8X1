RTL CODE:
module demux_1x8(
    input i,
    input [2:0] sel,
    output reg  [7:0] y);
    
    always @(*)
    begin
     y = 8'b00000000;

    case(sel)
    3'b000 : y[0] = i;
    3'b001 : y[1] = i;
    3'b010 : y[2] = i;
    3'b011 : y[3] = i;
    3'b100 : y[4] = i;
    3'b101 : y[5] = i;
    3'b110 : y[6] = i;
    3'b111 : y[7] = i;
    default : y = 8'b00000000;
    endcase
    end 
endmodule 


TEST BENCH:
`timescale 1ns / 1ps
//Date : 26/09/2024
//Name : Charan Kopparla 

module demux_8x1_tb();
    reg i;
    reg [2:0] sel;
    wire [7:0]y;
demux_1x8 dut (i,sel,y);
    integer k ;
    initial begin 
    for(k=0;k<8;k=k+1)
    begin
    i = $random();
    sel = $random();
    #10;
    $display("i = %d; sel = %d; y = %d",i,sel,y);
    #10;
    end 
    end
    
    initial begin 
    #200;
    $finish();
    end 
endmodule 
