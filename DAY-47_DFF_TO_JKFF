RTL CODE :
`timescale 1ns / 1ps
//Date : 24/10/2024
//Name : Charan Kopparla
module D_to_JK_FF (
    input J,      
    input K,       
    input clk,   
    input reset,   
    output reg Q,  
    output reg Q_bar 
);
    reg D;
    always @(posedge clk or posedge reset) begin
        if (reset) begin
            Q <= 0;
            Q_bar <= 1;
        end else begin
            Q <= D;
            Q_bar <= ~Q;
        end
    end

    always @(*) begin
        case ({J, K})
            2'b00: D = Q;         // No change
            2'b01: D = 1'b0;      // Reset
            2'b10: D = 1'b1;      // Set
            2'b11: D = ~Q;        // Toggle
        endcase
    end
endmodule

TEST BENCH :
`timescale 1ns / 1ps

//Date : 24/10/2024
//Name : Charan Kopparla

module tb_D_to_JK_FF;

    reg J;
    reg K;
    reg clk;
    reg reset;
    wire Q;
    wire Q_bar;
    
    D_to_JK_FF uut (
        .J(J),
        .K(K),
        .clk(clk),
        .reset(reset),
        .Q(Q),
        .Q_bar(Q_bar)
    );
    always #5 clk = ~clk;

    initial begin
      
        clk = 0;
        J = 0;
        K = 0;
        reset = 1;
        
       
        #10 reset = 0;

       
        #10 J = 0; K = 0;
        #20;
        #10 J = 0; K = 1;
        #20;
        #10 J = 1; K = 0;
        #20;      
        #10 J = 1; K = 1;
        #20;
        #10 reset = 1;
        #10 reset = 0;

        $finish;
    end

    initial begin
        $monitor("| J = %b | K = %b | Q = %b | Q_bar = %b | Reset = %b", J, K, Q, Q_bar, reset);
    end

endmodule
