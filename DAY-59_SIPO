RTL CODE :
`timescale 1ns / 1ps
//Date : 5/11/2024
//Name : Charan Kopparla 


module SIPO(
    input clk,rst,
    input serial_in,
    output reg [3:0] parallel_out);
    
    reg [3:0] shift_reg;
    
always @ (posedge clk or posedge rst)
 begin 
   if(rst)
    begin
      shift_reg <= 4'b0000;
      parallel_out <=4'b0000;
    end
   else begin 
     shift_reg[3] <= serial_in;
     shift_reg[2] <= shift_reg[3];
     shift_reg[1] <= shift_reg[2];
     shift_reg[0] <= shift_reg[1];
     
     parallel_out <= shift_reg ;
     end 
    end 
endmodule


TEST BENCH :
`timescale 1ns / 1ps
//Date : 5/11/2024
//Name : Charan Kopparla 

module SIPO_tb();
   reg clk,rst;
   reg serial_in;
   wire [3:0] parallel_out;
  
  
SIPO dut(clk,rst,serial_in,parallel_out);

initial clk =0;
always #5 clk=~clk;

        initial begin 
            rst = 1;
            serial_in=0;
            #10;
            rst = 0;
            #10;
            serial_in = 1;
            #10;
            serial_in = 0;
            #10;
            serial_in = 0;
            #10;
            serial_in = 1;
            #10;
            #50;
            rst = 1;
             #10;
             rst = 0;
             #10;
             $finish();
             end      
endmodule
