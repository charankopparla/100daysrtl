RTL CODE :
`timescale 1ns / 1ps
//Date : 18/09/2024
//Name : Charan Kopparla
module Full_adder(
input a,b,c,
output sum,carry);
assign sum = a^b^c;
assign carry = (a^b|b^c|c^a);
endmodule 

module mux(
input a,b,sel,
output reg y);
always@(*)
begin
if(sel==1)
y=a;
else 
y=b;
end
endmodule 


module CarrySkipAdder(
input [3:0]a,b,
input cin,
output [3:0] sum,
output cout);
wire [3:0] p;
wire w1,w2;
wire [3:0] c;

Full_adder m1(.a(a[0]),.b(b[0]),.c(cin),.sum(sum[0]),.carry(c[0]));
Full_adder m2(.a(a[1]),.b(b[1]),.c(c[0]),.sum(sum[1]),.carry(c[1]));    
Full_adder m3(.a(a[2]),.b(b[2]),.c(c[1]),.sum(sum[2]),.carry(c[2]));
Full_adder m4(.a(a[3]),.b(b[3]),.c(c[2]),.sum(sum[3]),.carry(c[3]));

assign p[0] = a[0]^b[0];
assign p[1] = a[1]^b[1];
assign p[2] = a[2]^b[2];
assign p[3] = a[3]^b[3];

assign w1 = p[0]&p[1]&p[2]&p[3];

mux m5(.a(cin),.b(c[3]),.sel(w1),.y(cout));
endmodule



TEST BENCH :
`timescale 1ns / 1ps
//Date : 18/09/2024
//Name : Charan Kopparla
module CarrySkipAdder_tb();
reg [3:0]a,b;
reg cin;
wire cout;
wire[3:0]sum;

CarrySkipAdder dut(.a(a),.b(b),.cin(cin),.sum(sum),.cout(cout));
initial begin 
a=4'b0000;b=4'b0000;cin=0;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
a=4'b0001;b=4'b0010;cin=1;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
a=4'b0011;b=4'b1000;cin=0;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
a=4'b1010;b=4'b0101;cin=1;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
a=4'b0111;b=4'b0100;cin=0;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
a=4'b0110;b=4'b0110;cin=1;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
a=4'b1010;b=4'b1111;cin=0;
#10;
$display("a=%d,b=%d,cin=%d,sum=%d,cout=%b",a,b,cin,sum,cout);
#10;
$finish();
end
endmodule

