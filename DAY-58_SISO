RTL CODE :
`timescale 1ns / 1ps
//Date : 4/11/2024
//Name : Charan Kopparla 

module SISO(
    input clk,rst,
    input serial_in,
    output reg serial_out);
    
    reg [3:0] shift_reg;
    
always@(posedge clk or posedge rst)
  begin
    if(rst)
     begin 
      shift_reg <=4'b0000;
      serial_out <= 0;
     end 
     
    else begin 
      shift_reg[3] <= shift_reg[2];
      shift_reg[2] <= shift_reg[1];
      shift_reg[1] <= shift_reg[0];
      shift_reg[0] <= serial_in;
      serial_out <= shift_reg[3];
     end 
    end
      
endmodule

TEST BENCH :
 `timescale 1ns / 1ps
//Date : 4/11/2024
//Name : Charan Kopparla

module SISO_tb();
    reg clk,rst;
    reg serial_in;
    wire serial_out;
    
SISO dut(clk,rst,serial_in,serial_out);

initial clk = 0;
always #5 clk = ~clk ;

        initial begin
          rst = 1;
          serial_in=0;
          #10;
          rst = 0;
          #10;
          serial_in = 1;
          #10;
          serial_in = 0;
          #10;
          serial_in = 1;
          #10;
          serial_in = 1;
          #10;
          serial_in = 0;
          #10;
          
          #50;
          rst = 1;
          #10;
          rst = 0;
          #10;
          $finish();
          end 
endmodule
