RTL CODE:
`timescale 1ns / 1ps
module half_adder(
input a,b,
output sum,carry);
assign sum = a^b;
assign carry = a&b;
endmodule 


module FA_2HA(
input a ,b ,cin,
output sum,carry);
wire c,c1,s;
half_adder ha0(a,b,s,c);
half_adder ha1(cin,s,sum,c1);

assign carry = c | c1 ;

endmodule

TEST BENCH :
`timescale 1ns / 1s
module FA_2HA_tb();
reg a,b,cin;
wire sum,carry;
FA_2HA dut(a,b,cin,sum,carry);
initial begin 
a=0;b=0;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=0;b=0;cin=1;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=0;b=1;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=0;b=1;cin=1;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=1;b=0;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=1;b=0;cin=1;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=1;b=1;cin=0;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
a=1;b=1;cin=1;
#10;
$display("a=%b,b=%b,cin=%b,sum=%b,carry=%b",a,b,cin,sum,carry);
$finish();
end 
endmodule
