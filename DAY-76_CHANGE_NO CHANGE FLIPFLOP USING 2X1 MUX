RTL CODE:
`timescale 1ns / 1ps
//Date : 23/11/2024
//Name : Charan Kopparla 
module CN_FlipFlop (
    input clk,
    input reset,
    input C,
    output reg Q
);

    wire mux_out;
    assign mux_out = (C) ? ~Q : Q;

    always @(posedge clk or posedge reset) begin
        if (reset)
            Q <= 0;
        else
            Q <= mux_out;
    end
endmodule

TEST BENCH :
`timescale 1ns / 1ps
//Date : 23/11/2024
//Name : Charan Kopparla 


module CN_FlipFlop_tb;

    reg clk;
    reg reset;
    reg C;
    wire Q;

    CN_FlipFlop uut (
        .clk(clk),
        .reset(reset),
        .C(C),
        .Q(Q)
    );

    initial begin
        clk = 0;
        forever #5 clk = ~clk;
    end

    initial begin
        reset = 1; C = 0; #10;
        reset = 0; C = 0; #10;
        C = 1; #10;
        C = 0; #10;
        C = 1; #10;
        C = 1; #10;
        C = 0; #10;
        $finish;
    end

    initial begin
        $monitor("Time=%0d clk=%b reset=%b C=%b Q=%b", $time, clk, reset, C, Q);
    end
endmodule

